/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  JSCFreezable,
  JSCFreezableInterface,
} from "../../../contracts/production/JSCFreezable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "con",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "ContractFrozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "RevisionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "pdata",
        type: "bytes",
      },
    ],
    name: "RevisionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "RevisionRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "pdata",
        type: "bytes",
      },
    ],
    name: "executeRevision",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getRevisionByName",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "uint8[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "quorum",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision",
        name: "value",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "JSCRevisionsLib.Iterator",
        name: "i",
        type: "uint256",
      },
    ],
    name: "isValidRevisionIterator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "iterateRevisions",
    outputs: [
      {
        internalType: "JSCRevisionsLib.Iterator",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "JSCRevisionsLib.Iterator",
        name: "i",
        type: "uint256",
      },
    ],
    name: "nextRevision",
    outputs: [
      {
        internalType: "JSCRevisionsLib.Iterator",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revisionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "JSCRevisionsLib.Iterator",
        name: "i",
        type: "uint256",
      },
    ],
    name: "revisionIteratorGet",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "uint8[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "quorum",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision",
        name: "value",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526005805460ff1916600117905534801561001d57600080fd5b506100273361002c565b61007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6116468061008b6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063c5675c0a11610071578063c5675c0a14610136578063d25c63ed14610149578063d6a7cfd814610169578063d9a85a181461017c578063f01e590c14610184578063f2fde38b1461019757600080fd5b806301ffc9a7146100b95780632321eacc146100e157806333eeb147146100f3578063715018a6146100fe5780638da5cb5b14610108578063b1c7c8de14610123575b600080fd5b6100cc6100c73660046110ab565b6101aa565b60405190151581526020015b60405180910390f35b6003545b6040519081526020016100d8565b60055460ff166100cc565b6101066101d5565b005b6000546040516001600160a01b0390911681526020016100d8565b6101066101313660046111a9565b6101e9565b6100e5610144366004611221565b61031f565b61015c61015736600461123a565b61039d565b6040516100d89190611389565b6100cc610177366004611221565b6108b7565b6100e5610935565b61015c610192366004611221565b6109b1565b6101066101a5366004611481565b610ed3565b60006001600160e01b031982166333eeb14760e01b14806101cf57506101cf82610f51565b92915050565b6101dd610f86565b6101e76000610fe0565b565b6101f1610f86565b604051631ac2b5a760e21b815273__$d094ecee2be569ef0d32593b6bffef0986$__90636b0ad69c9061022b9060019086906004016114aa565b602060405180830381865af4158015610248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026c91906114c3565b80156102a4575060048260405161028391906114e5565b9081526040519081900360200190205460ff68010000000000000000909104165b6102ad57600080fd5b6102e2816004846040516102c191906114e5565b9081526040519081900360200190205463ffffffff61103082150290911716565b7fbe116e771647155f37b08a4ebf4bb1c710020ffb2ab61cc292d8f361a2798b088282604051610313929190611501565b60405180910390a15050565b60405163c776d8a360e01b8152600160048201526024810182905260009073__$d094ecee2be569ef0d32593b6bffef0986$__9063c776d8a390604401602060405180830381865af4158015610379573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cf9190611526565b6103a5611038565b60405163f76eafc160e01b815273__$d094ecee2be569ef0d32593b6bffef0986$__9063f76eafc1906103df9060019086906004016114aa565b602060405180830381865af41580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104209190611526565b6040518060c001604052908160008201805461043b9061153f565b80601f01602080910402602001604051908101604052809291908181526020018280546104679061153f565b80156104b45780601f10610489576101008083540402835291602001916104b4565b820191906000526020600020905b81548152906001019060200180831161049757829003601f168201915b505050505081526020016001820180546104cd9061153f565b80601f01602080910402602001604051908101604052809291908181526020018280546104f99061153f565b80156105465780601f1061051b57610100808354040283529160200191610546565b820191906000526020600020905b81548152906001019060200180831161052957829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156106205783829060005260206000200180546105939061153f565b80601f01602080910402602001604051908101604052809291908181526020018280546105bf9061153f565b801561060c5780601f106105e15761010080835404028352916020019161060c565b820191906000526020600020905b8154815290600101906020018083116105ef57829003601f168201915b505050505081526020019060010190610574565b505050508152602001600382018054806020026020016040519081016040528092919081815260200182805480156106a757602002820191906000526020600020906000905b82829054906101000a900460ff16600381111561068557610685611328565b8152602060019283018181049485019490930390920291018084116106665790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156107815783829060005260206000200180546106f49061153f565b80601f01602080910402602001604051908101604052809291908181526020018280546107209061153f565b801561076d5780601f106107425761010080835404028352916020019161076d565b820191906000526020600020905b81548152906001019060200180831161075057829003601f168201915b5050505050815260200190600101906106d5565b505050908252506040805160a08101825260058401805461ffff80821684526201000082041660208481019190915260ff6401000000008304811685870152650100000000009092049091166060840152600686018054855181840281018401909652808652958201959394929360808601939260009084015b828210156108a757838290600052602060002001805461081a9061153f565b80601f01602080910402602001604051908101604052809291908181526020018280546108469061153f565b80156108935780601f1061086857610100808354040283529160200191610893565b820191906000526020600020905b81548152906001019060200180831161087657829003601f168201915b5050505050815260200190600101906107fb565b5050509152505090525092915050565b604051632bc3987b60e21b8152600160048201526024810182905260009073__$d094ecee2be569ef0d32593b6bffef0986$__9063af0e61ec90604401602060405180830381865af4158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cf91906114c3565b6040516348b8c39760e11b81526001600482015260009073__$d094ecee2be569ef0d32593b6bffef0986$__90639171872e90602401602060405180830381865af4158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190611526565b905090565b6109b9611038565b604051632877395560e21b8152600160048201526024810183905273__$d094ecee2be569ef0d32593b6bffef0986$__9063a1dce55490604401600060405180830381865af4158015610a10573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a389190810190611579565b9050806040518060c0016040529081600082018054610a569061153f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a829061153f565b8015610acf5780601f10610aa457610100808354040283529160200191610acf565b820191906000526020600020905b815481529060010190602001808311610ab257829003601f168201915b50505050508152602001600182018054610ae89061153f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b149061153f565b8015610b615780601f10610b3657610100808354040283529160200191610b61565b820191906000526020600020905b815481529060010190602001808311610b4457829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610c3b578382906000526020600020018054610bae9061153f565b80601f0160208091040260200160405190810160405280929190818152602001828054610bda9061153f565b8015610c275780601f10610bfc57610100808354040283529160200191610c27565b820191906000526020600020905b815481529060010190602001808311610c0a57829003601f168201915b505050505081526020019060010190610b8f565b50505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610cc257602002820191906000526020600020906000905b82829054906101000a900460ff166003811115610ca057610ca0611328565b815260206001928301818104948501949093039092029101808411610c815790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610d9c578382906000526020600020018054610d0f9061153f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3b9061153f565b8015610d885780601f10610d5d57610100808354040283529160200191610d88565b820191906000526020600020905b815481529060010190602001808311610d6b57829003601f168201915b505050505081526020019060010190610cf0565b505050908252506040805160a08101825260058401805461ffff80821684526201000082041660208481019190915260ff6401000000008304811685870152650100000000009092049091166060840152600686018054855181840281018401909652808652958201959394929360808601939260009084015b82821015610ec2578382906000526020600020018054610e359061153f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e619061153f565b8015610eae5780601f10610e8357610100808354040283529160200191610eae565b820191906000526020600020905b815481529060010190602001808311610e9157829003601f168201915b505050505081526020019060010190610e16565b505050915250509052509392505050565b610edb610f86565b6001600160a01b038116610f455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610f4e81610fe0565b50565b60006001600160e01b03198216637accd13960e01b14806101cf57506301ffc9a760e01b6001600160e01b03198316146101cf565b6000546001600160a01b031633146101e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610f3c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6101e76115fa565b6040518060c0016040528060608152602001606081526020016060815260200160608152602001606081526020016110a66040518060a00160405280600061ffff168152602001600061ffff168152602001600060ff168152602001600060ff168152602001606081525090565b905290565b6000602082840312156110bd57600080fd5b81356001600160e01b0319811681146110d557600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561111b5761111b6110dc565b604052919050565b600067ffffffffffffffff82111561113d5761113d6110dc565b50601f01601f191660200190565b600061115e61115984611123565b6110f2565b905082815283838301111561117257600080fd5b828260208301376000602084830101529392505050565b600082601f83011261119a57600080fd5b6110d58383356020850161114b565b600080604083850312156111bc57600080fd5b823567ffffffffffffffff808211156111d457600080fd5b6111e086838701611189565b935060208501359150808211156111f657600080fd5b508301601f8101851361120857600080fd5b6112178582356020840161114b565b9150509250929050565b60006020828403121561123357600080fd5b5035919050565b60006020828403121561124c57600080fd5b813567ffffffffffffffff81111561126357600080fd5b61126f84828501611189565b949350505050565b60005b8381101561129257818101518382015260200161127a565b838111156112a1576000848401525b50505050565b600081518084526112bf816020860160208601611277565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b8581101561131b5782840389526113098483516112a7565b988501989350908401906001016112f1565b5091979650505050505050565b634e487b7160e01b600052602160045260246000fd5b600061ffff8083511684528060208401511660208501525060ff604083015116604084015260ff6060830151166060840152608082015160a0608085015261126f60a08501826112d3565b60006020808352835160c0828501526113a560e08501826112a7565b905081850151601f19808684030160408701526113c283836112a7565b925060408701519150808684030160608701526113df83836112d3565b606088015187820383016080890152805180835290860194506000935090850190835b8181101561143b578551600480821061142857634e487b7160e01b875260218152602487fd5b5083529486019491860191600101611402565b505060808801519450818782030160a088015261145881866112d3565b94505060a08701519250808685030160c08701525050611478828261133e565b95945050505050565b60006020828403121561149357600080fd5b81356001600160a01b03811681146110d557600080fd5b82815260406020820152600061126f60408301846112a7565b6000602082840312156114d557600080fd5b815180151581146110d557600080fd5b600082516114f7818460208701611277565b9190910192915050565b60408152600061151460408301856112a7565b828103602084015261147881856112a7565b60006020828403121561153857600080fd5b5051919050565b600181811c9082168061155357607f821691505b60208210810361157357634e487b7160e01b600052602260045260246000fd5b50919050565b6000806040838503121561158c57600080fd5b825167ffffffffffffffff8111156115a357600080fd5b8301601f810185136115b457600080fd5b80516115c261115982611123565b8181528660208385010111156115d757600080fd5b6115e8826020830160208601611277565b60209590950151949694955050505050565b634e487b7160e01b600052605160045260246000fdfea2646970667358221220bc478b33d9f387b5fc288db227f2a67002a7f2e89509234af73a4109a025973264736f6c634300080d0033";

type JSCFreezableConstructorParams =
  | [linkLibraryAddresses: JSCFreezableLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JSCFreezableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class JSCFreezable__factory extends ContractFactory {
  constructor(...args: JSCFreezableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        JSCFreezable__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: JSCFreezableLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d094ecee2be569ef0d32593b6bffef0986\\$__", "g"),
      linkLibraryAddresses["libraries/JSCRevisionsLib.sol:JSCRevisionsLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JSCFreezable> {
    return super.deploy(overrides || {}) as Promise<JSCFreezable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JSCFreezable {
    return super.attach(address) as JSCFreezable;
  }
  override connect(signer: Signer): JSCFreezable__factory {
    return super.connect(signer) as JSCFreezable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JSCFreezableInterface {
    return new utils.Interface(_abi) as JSCFreezableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JSCFreezable {
    return new Contract(address, _abi, signerOrProvider) as JSCFreezable;
  }
}

export interface JSCFreezableLibraryAddresses {
  ["libraries/JSCRevisionsLib.sol:JSCRevisionsLib"]: string;
}
