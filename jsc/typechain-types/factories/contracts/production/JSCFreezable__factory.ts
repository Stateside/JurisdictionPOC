/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  JSCFreezable,
  JSCFreezableInterface,
} from "../../../contracts/production/JSCFreezable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "con",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "ContractFrozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "RevisionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "pdata",
        type: "bytes",
      },
    ],
    name: "RevisionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "RevisionRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "pdata",
        type: "bytes",
      },
    ],
    name: "executeRevision",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "JSCRevisionsLib.Iterator",
        name: "i",
        type: "uint256",
      },
    ],
    name: "isValidRevisionIterator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "iterateRevisions",
    outputs: [
      {
        internalType: "JSCRevisionsLib.Iterator",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "JSCRevisionsLib.Iterator",
        name: "i",
        type: "uint256",
      },
    ],
    name: "nextRevision",
    outputs: [
      {
        internalType: "JSCRevisionsLib.Iterator",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revisionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "JSCRevisionsLib.Iterator",
        name: "i",
        type: "uint256",
      },
    ],
    name: "revisionIteratorGet",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "uint8[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "quorumPercentage",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision",
        name: "value",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526005805460ff1916600117905534801561001d57600080fd5b506100273361002c565b61007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6110f98061008b6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063c5675c0a11610076578063d9a85a181161005b578063d9a85a181461014f578063f01e590c14610157578063f2fde38b1461017757600080fd5b8063c5675c0a14610129578063d6a7cfd81461013c57600080fd5b8063715018a6116100a7578063715018a6146100f15780638da5cb5b146100fb578063b1c7c8de1461011657600080fd5b80632321eacc146100c357806333eeb147146100da575b600080fd5b6003545b6040519081526020015b60405180910390f35b60055460ff165b60405190151581526020016100d1565b6100f961018a565b005b6000546040516001600160a01b0390911681526020016100d1565b6100f9610124366004610c70565b61019e565b6100c7610137366004610cff565b6102ed565b6100e161014a366004610cff565b61038a565b6100c7610421565b61016a610165366004610cff565b6104b6565b6040516100d19190610e35565b6100f9610185366004610f2d565b6109f1565b610192610a86565b61019c6000610ae0565b565b6101a6610a86565b6040517f6b0ad69c00000000000000000000000000000000000000000000000000000000815273__$d094ecee2be569ef0d32593b6bffef0986$__90636b0ad69c906101f9906001908690600401610f5d565b602060405180830381865af4158015610216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023a9190610f76565b801561027257506004826040516102519190610f98565b9081526040519081900360200190205460ff68010000000000000000909104165b61027b57600080fd5b6102b08160048460405161028f9190610f98565b9081526040519081900360200190205463ffffffff610b4882150290911716565b7fbe116e771647155f37b08a4ebf4bb1c710020ffb2ab61cc292d8f361a2798b0882826040516102e1929190610fb4565b60405180910390a15050565b6040517fc776d8a3000000000000000000000000000000000000000000000000000000008152600160048201526024810182905260009073__$d094ecee2be569ef0d32593b6bffef0986$__9063c776d8a390604401602060405180830381865af4158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610fd9565b92915050565b6040517faf0e61ec000000000000000000000000000000000000000000000000000000008152600160048201526024810182905260009073__$d094ecee2be569ef0d32593b6bffef0986$__9063af0e61ec90604401602060405180830381865af41580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610f76565b6040517f9171872e0000000000000000000000000000000000000000000000000000000081526001600482015260009073__$d094ecee2be569ef0d32593b6bffef0986$__90639171872e90602401602060405180830381865af415801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b19190610fd9565b905090565b6104be610b50565b6040517fa1dce554000000000000000000000000000000000000000000000000000000008152600160048201526024810183905273__$d094ecee2be569ef0d32593b6bffef0986$__9063a1dce55490604401600060405180830381865af415801561052e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105569190810190610ff2565b9050806040518060c001604052908160008201805461057490611073565b80601f01602080910402602001604051908101604052809291908181526020018280546105a090611073565b80156105ed5780601f106105c2576101008083540402835291602001916105ed565b820191906000526020600020905b8154815290600101906020018083116105d057829003601f168201915b5050505050815260200160018201805461060690611073565b80601f016020809104026020016040519081016040528092919081815260200182805461063290611073565b801561067f5780601f106106545761010080835404028352916020019161067f565b820191906000526020600020905b81548152906001019060200180831161066257829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156107595783829060005260206000200180546106cc90611073565b80601f01602080910402602001604051908101604052809291908181526020018280546106f890611073565b80156107455780601f1061071a57610100808354040283529160200191610745565b820191906000526020600020905b81548152906001019060200180831161072857829003601f168201915b5050505050815260200190600101906106ad565b505050508152602001600382018054806020026020016040519081016040528092919081815260200182805480156107e057602002820191906000526020600020906000905b82829054906101000a900460ff1660038111156107be576107be610dcc565b81526020600192830181810494850194909303909202910180841161079f5790505b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156108ba57838290600052602060002001805461082d90611073565b80601f016020809104026020016040519081016040528092919081815260200182805461085990611073565b80156108a65780601f1061087b576101008083540402835291602001916108a6565b820191906000526020600020905b81548152906001019060200180831161088957829003601f168201915b50505050508152602001906001019061080e565b505050908252506040805160a08101825260058401805461ffff80821684526201000082041660208481019190915260ff6401000000008304811685870152650100000000009092049091166060840152600686018054855181840281018401909652808652958201959394929360808601939260009084015b828210156109e057838290600052602060002001805461095390611073565b80601f016020809104026020016040519081016040528092919081815260200182805461097f90611073565b80156109cc5780601f106109a1576101008083540402835291602001916109cc565b820191906000526020600020905b8154815290600101906020018083116109af57829003601f168201915b505050505081526020019060010190610934565b505050915250509052509392505050565b6109f9610a86565b6001600160a01b038116610a7a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610a8381610ae0565b50565b6000546001600160a01b0316331461019c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a71565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61019c6110ad565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001610bbe6040518060a00160405280600061ffff168152602001600061ffff168152602001600060ff168152602001600060ff168152602001606081525090565b905290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c0257610c02610bc3565b604052919050565b600067ffffffffffffffff821115610c2457610c24610bc3565b50601f01601f191660200190565b6000610c45610c4084610c0a565b610bd9565b9050828152838383011115610c5957600080fd5b828260208301376000602084830101529392505050565b60008060408385031215610c8357600080fd5b823567ffffffffffffffff80821115610c9b57600080fd5b818501915085601f830112610caf57600080fd5b610cbe86833560208501610c32565b93506020850135915080821115610cd457600080fd5b508301601f81018513610ce657600080fd5b610cf585823560208401610c32565b9150509250929050565b600060208284031215610d1157600080fd5b5035919050565b60005b83811015610d33578181015183820152602001610d1b565b83811115610d42576000848401525b50505050565b60008151808452610d60816020860160208601610d18565b601f01601f19169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b84811015610dbf57601f19868403018952610dad838351610d48565b98840198925090830190600101610d91565b5090979650505050505050565b634e487b7160e01b600052602160045260246000fd5b600061ffff8083511684528060208401511660208501525060ff604083015116604084015260ff6060830151166060840152608082015160a06080850152610e2d60a0850182610d74565b949350505050565b60006020808352835160c082850152610e5160e0850182610d48565b905081850151601f1980868403016040870152610e6e8383610d48565b92506040870151915080868403016060870152610e8b8383610d74565b606088015187820383016080890152805180835290860194506000935090850190835b81811015610ee75785516004808210610ed457634e487b7160e01b875260218152602487fd5b5083529486019491860191600101610eae565b505060808801519450818782030160a0880152610f048186610d74565b94505060a08701519250808685030160c08701525050610f248282610de2565b95945050505050565b600060208284031215610f3f57600080fd5b81356001600160a01b0381168114610f5657600080fd5b9392505050565b828152604060208201526000610e2d6040830184610d48565b600060208284031215610f8857600080fd5b81518015158114610f5657600080fd5b60008251610faa818460208701610d18565b9190910192915050565b604081526000610fc76040830185610d48565b8281036020840152610f248185610d48565b600060208284031215610feb57600080fd5b5051919050565b6000806040838503121561100557600080fd5b825167ffffffffffffffff81111561101c57600080fd5b8301601f8101851361102d57600080fd5b805161103b610c4082610c0a565b81815286602083850101111561105057600080fd5b611061826020830160208601610d18565b60209590950151949694955050505050565b600181811c9082168061108757607f821691505b6020821081036110a757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052605160045260246000fdfea26469706673582212208f8aefe409cf8ff099eaa8e778c4b0a26b0b44d5ff4048f4c0e1071c30a7decd64736f6c634300080d0033";

type JSCFreezableConstructorParams =
  | [linkLibraryAddresses: JSCFreezableLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JSCFreezableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class JSCFreezable__factory extends ContractFactory {
  constructor(...args: JSCFreezableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        JSCFreezable__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: JSCFreezableLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d094ecee2be569ef0d32593b6bffef0986\\$__", "g"),
      linkLibraryAddresses["libraries/JSCRevisionsLib.sol:JSCRevisionsLib"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JSCFreezable> {
    return super.deploy(overrides || {}) as Promise<JSCFreezable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JSCFreezable {
    return super.attach(address) as JSCFreezable;
  }
  override connect(signer: Signer): JSCFreezable__factory {
    return super.connect(signer) as JSCFreezable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JSCFreezableInterface {
    return new utils.Interface(_abi) as JSCFreezableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JSCFreezable {
    return new Contract(address, _abi, signerOrProvider) as JSCFreezable;
  }
}

export interface JSCFreezableLibraryAddresses {
  ["libraries/JSCRevisionsLib.sol:JSCRevisionsLib"]: string;
}
