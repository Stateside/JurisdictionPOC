/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  JSCTitleTokenLib,
  JSCTitleTokenLibInterface,
} from "../../libraries/JSCTitleTokenLib";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "getChangeOwnerRevision",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "JSCRevisionsLib.ParamType[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "quorumPercentage",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getFreezeOwnerRevision",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "JSCRevisionsLib.ParamType[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "quorumPercentage",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getFreezeTokenRevision",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "JSCRevisionsLib.ParamType[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "quorumPercentage",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRevisions",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "JSCRevisionsLib.ParamType[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "quorumPercentage",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision[]",
        name: "result",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61251561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101765760003560e01c8063a8a581ea116100d7578063c440aa9a1161008b578063d80c955111610070578063d80c95511461032b578063da3a87ed146101bd578063fe38eed91461034b57600080fd5b8063c440aa9a146102f8578063cc5bb9951461031857600080fd5b8063b7d5af6e116100bc578063b7d5af6e146102b2578063b8a6ad20146102c5578063c140b223146102d857600080fd5b8063a8a581ea1461026d578063b63485cc1461028257600080fd5b80636b0675be1161012e57806379591b7c1161011357806379591b7c1461024a5780638f4cc70c1461025d5780639f3023d21461026557600080fd5b80636b0675be1461021557806374a83d641461023557600080fd5b8063289833da1161015f578063289833da146101bd5780633695ca2d146101e25780636137e2441461020257600080fd5b80630d179c5f1461017b5780631ff5d27e1461019d575b600080fd5b81801561018757600080fd5b5061019b610196366004611ea8565b61037d565b005b8180156101a957600080fd5b5061019b6101b8366004611f1b565b61050c565b6101cf6101cb366004611f50565b5490565b6040519081526020015b60405180910390f35b8180156101ee57600080fd5b5061019b6101fd366004611f69565b610677565b6101cf610210366004611f9e565b610755565b81801561022157600080fd5b5061019b610230366004611f9e565b6107d3565b61023d6108ee565b6040516101d991906121a8565b61019b6102583660046121d2565b610ca3565b61023d610d43565b61023d6110df565b610275611492565b6040516101d99190612205565b81801561028e57600080fd5b506102a261029d366004612267565b61153c565b60405190151581526020016101d9565b61019b6102c0366004611f9e565b6116ac565b6101cf6102d3366004611f9e565b611719565b8180156102e457600080fd5b5061019b6102f33660046122e3565b611794565b81801561030457600080fd5b5061019b610313366004611f9e565b61193c565b61019b61032636600461230f565b6119c4565b81801561033757600080fd5b5061019b61034636600461233b565b611a92565b6102a2610359366004611f9e565b600090815260049190910160205260409020600101546001600160a01b0316151590565b6001600160a01b0383166103d85760405162461bcd60e51b815260206004820152601860248201527f6d696e7420746f20746865207a65726f2061646472657373000000000000000060448201526064015b60405180910390fd5b6001600160a01b038316600090815260058501602052604090206103fc908261193c565b60008181526004850160209081526040909120835161041d92850190611c69565b50600081815260048501602052604080822060010180546001600160a01b0319166001600160a01b03871690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4610494600084836040518060200160405280600081525061153c565b6105065760405162461bcd60e51b815260206004820152602a60248201527f7472616e7366657220746f206e6f6e204552433732315265636569766572206960448201527f6d706c656d656e7465720000000000000000000000000000000000000000000060648201526084016103cf565b50505050565b6000811161055c5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d757374206e6f74206265207a65726f00000000000000000060448201526064016103cf565b604080516060810182526001600160a01b03841680825260208083018590524283850152600091825260018701905291909120541561061b576001600160a01b03831660009081526001808601602052604090912054829186916105c0919061237f565b815481106105d0576105d06123a4565b600091825260209182902083516003929092020180546001600160a01b0319166001600160a01b03909216919091178155908201516001820155604090910151600290910155610506565b83546001808201865560008681526020808220855160039095020180546001600160a01b0319166001600160a01b0395861617815585820151818501556040958601516002909101558754969093168152950190529092205550565b6001600160a01b0381166000908152600584016020526040902061069b90836107d3565b60008281526004840160205260408120906106b68282611ced565b6001820180546001600160a01b03191690556002820180547fffffffffffffffffffffff0000000000000000000000000000000000000000001690556003820160006107028282611d2a565b50506005820160006107148282611d2a565b5050604051849250600091506001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b815460009082106107a85760405162461bcd60e51b815260206004820152601360248201527f696e646578206f7574206f6620626f756e64730000000000000000000000000060448201526064016103cf565b8260000182815481106107bd576107bd6123a4565b9060005260206000209060030201905092915050565b60008181526001830160205260409020546108305760405162461bcd60e51b815260206004820152601660248201527f546f6b656e496420646f6573206e6f742065786973740000000000000000000060448201526064016103cf565b8154600082815260018401602052604090205410156108b057815482906108599060019061237f565b81548110610869576108696123a4565b6000918252602080832090910154838352600180860190925260409092205484916108939161237f565b815481106108a3576108a36123a4565b6000918252602090912001555b81548290806108c1576108c16123ba565b60008281526020808220830160001990810183905590920190925591815260019290920190526040812055565b6108f6611d4b565b60408051600280825260608201909252600091816020015b606081526020019060019003908161090e5790505090506040518060400160405280600581526020017f6f776e65720000000000000000000000000000000000000000000000000000008152508160008151811061096e5761096e6123a4565b602002602001018190525060405180604001604052806006815260200165667265657a6560d01b815250816001815181106109ab576109ab6123a4565b6020908102919091010152604080516002808252606082019092526000918160200160208202803683370190505090506000816000815181106109f0576109f06123a4565b60200260200101906003811115610a0957610a09612062565b90816003811115610a1c57610a1c612062565b81525050600181600181518110610a3557610a356123a4565b60200260200101906003811115610a4e57610a4e612062565b90816003811115610a6157610a61612062565b90525060408051600280825260608201909252600091816020015b6060815260200190600190039081610a7c5790505090506040518060400160405280601981526020017f41646472657373206f662073656c6563746564206f776e65720000000000000081525081600081518110610adc57610adc6123a4565b60200260200101819052506040518060400160405280600d81526020017f467265657a65206f776e65723f0000000000000000000000000000000000000081525081600181518110610b3057610b306123a4565b602090810291909101015260408051600280825260608201909252600091816020015b6060815260200190600190039081610b5357905050905060405180604001604052806008815260200167129d591a58da585b60c21b81525081600081518110610b9e57610b9e6123a4565b602002602001018190525060405180604001604052806008815260200167129d591a58da585b60c21b81525081600181518110610bdd57610bdd6123a4565b60200260200101819052506040518060c001604052806040518060400160405280600b81526020017f467265657a654f776e657200000000000000000000000000000000000000000081525081526020016040518060600160405280602381526020016124bd6023913981526020018581526020018481526020018381526020016040518060a00160405280600061ffff168152602001600061ffff168152602001600060ff168152602001600060ff1681526020018481525081525094505050505090565b6001600160a01b038216600090815260078401602052604090205460ff161515811580159190911490610cee5760405180606001604052806021815260200161249c60219139610d25565b6040518060400160405280601d81526020017f746f6b656e206f776e6572206163636f756e742069732066726f7a656e0000008152505b906105065760405162461bcd60e51b81526004016103cf91906123d0565b610d4b611d4b565b60408051600280825260608201909252600091816020015b6060815260200190600190039081610d63579050509050604051806040016040528060058152602001643a37b5b2b760d91b81525081600081518110610dab57610dab6123a4565b602002602001018190525060405180604001604052806006815260200165667265657a6560d01b81525081600181518110610de857610de86123a4565b602090810291909101015260408051600280825260608201909252600091816020016020820280368337019050509050600281600081518110610e2d57610e2d6123a4565b60200260200101906003811115610e4657610e46612062565b90816003811115610e5957610e59612062565b81525050600181600181518110610e7257610e726123a4565b60200260200101906003811115610e8b57610e8b612062565b90816003811115610e9e57610e9e612062565b90525060408051600280825260608201909252600091816020015b6060815260200190600190039081610eb95790505090506040518060400160405280601481526020017f4944206f662073656c656374656420746f6b656e00000000000000000000000081525081600081518110610f1957610f196123a4565b60200260200101819052506040518060400160405280600d81526020017f467265657a6520746f6b656e3f0000000000000000000000000000000000000081525081600181518110610f6d57610f6d6123a4565b602090810291909101015260408051600280825260608201909252600091816020015b6060815260200190600190039081610f9057905050905060405180604001604052806008815260200167129d591a58da585b60c21b81525081600081518110610fdb57610fdb6123a4565b602002602001018190525060405180604001604052806008815260200167129d591a58da585b60c21b8152508160018151811061101a5761101a6123a4565b6020908102919091018101919091526040805161010081018252600b60c082019081527f467265657a65546f6b656e00000000000000000000000000000000000000000060e0830152815281518083018352601a81527f467265657a65206f7220756e667265657a65206120746f6b656e000000000000818501528184015280820196909652606080870195909552608080870194909452805160a0818101835260008083529382018490529181018390529485019190915291830152820152919050565b6110e7611d4b565b60408051600280825260608201909252600091816020015b60608152602001906001900390816110ff579050509050604051806040016040528060058152602001643a37b5b2b760d91b81525081600081518110611147576111476123a4565b60200260200101819052506040518060400160405280600881526020017f6e65774f776e65720000000000000000000000000000000000000000000000008152508160018151811061119b5761119b6123a4565b6020908102919091010152604080516002808252606082019092526000918160200160208202803683370190505090506002816000815181106111e0576111e06123a4565b602002602001019060038111156111f9576111f9612062565b9081600381111561120c5761120c612062565b81525050600081600181518110611225576112256123a4565b6020026020010190600381111561123e5761123e612062565b9081600381111561125157611251612062565b90525060408051600280825260608201909252600091816020015b606081526020019060019003908161126c5790505090506040518060400160405280601481526020017f4944206f662073656c656374656420746f6b656e000000000000000000000000815250816000815181106112cc576112cc6123a4565b60200260200101819052506040518060400160405280601481526020017f41646472657373206f66206e6577206f776e657200000000000000000000000081525081600181518110611320576113206123a4565b602090810291909101015260408051600280825260608201909252600091816020015b606081526020019060019003908161134357905050905060405180604001604052806008815260200167129d591a58da585b60c21b8152508160008151811061138e5761138e6123a4565b602002602001018190525060405180604001604052806008815260200167129d591a58da585b60c21b815250816001815181106113cd576113cd6123a4565b6020908102919091018101919091526040805161010081018252600b60c082019081527f4368616e67654f776e657200000000000000000000000000000000000000000060e0830152815281518083018352601b81527f4368616e676520746865206f776e6572206f66206120746f6b656e0000000000818501528184015280820196909652606080870195909552608080870194909452805160a0818101835260008083529382018490529181018390529485019190915291830152820152919050565b60408051600380825260808201909252606091816020015b6114b2611d4b565b8152602001906001900390816114aa5790505090506114cf6110df565b816000815181106114e2576114e26123a4565b60200260200101819052506114f5610d43565b81600181518110611508576115086123a4565b602002602001018190525061151b6108ee565b8160028151811061152e5761152e6123a4565b602002602001018190525090565b60006001600160a01b0384163b156116a057604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906115809033908990889088906004016123e3565b6020604051808303816000875af19250505080156115bb575060408051601f3d908101601f191682019092526115b89181019061241f565b60015b61166e573d8080156115e9576040519150601f19603f3d011682016040523d82523d6000602084013e6115ee565b606091505b5080516000036116665760405162461bcd60e51b815260206004820152603460248201527f617474656d70746564207472616e7366657220746f206e6f6e2045524337323160448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016103cf565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000016630a85bd0160e11b1490506116a4565b5060015b949350505050565b60008181526004830160205260409020600101546001600160a01b03166117155760405162461bcd60e51b815260206004820152601060248201527f696e76616c696420746f6b656e2049440000000000000000000000000000000060448201526064016103cf565b5050565b8154600090821061176c5760405162461bcd60e51b815260206004820152601360248201527f696e646578206f7574206f6620626f756e64730000000000000000000000000060448201526064016103cf565b826000018281548110611781576117816123a4565b9060005260206000200154905092915050565b6001600160a01b03811660009081526001830160205260409020546117fb5760405162461bcd60e51b815260206004820152600e60248201527f4e6f206f6666657220666f756e6400000000000000000000000000000000000060448201526064016103cf565b81546001600160a01b038216600090815260018401602052604090205410156118d7578154829061182e9060019061237f565b8154811061183e5761183e6123a4565b9060005260206000209060030201826000016001846001016000856001600160a01b03166001600160a01b0316815260200190815260200160002054611884919061237f565b81548110611894576118946123a4565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b03909216919091178155600180830154908201556002918201549101555b81548290806118e8576118e86123ba565b6000828152602080822060036000199094019384020180546001600160a01b031916815560018181018490556002909101839055929093556001600160a01b03939093168352929092019091526040812055565b60008181526001830160205260409020541561199a5760405162461bcd60e51b815260206004820152601660248201527f546f6b656e496420616c7265616479206578697374730000000000000000000060448201526064016103cf565b81546001818101845560008481526020808220909301849055845493815293019052604090912055565b600082815260048401602052604090206002015460ff74010000000000000000000000000000000000000000909104161515811580159190911490611a3e576040518060400160405280601381526020017f746f6b656e206973206e6f742066726f7a656e00000000000000000000000000815250610d25565b6040518060400160405280600f81526020017f746f6b656e2069732066726f7a656e0000000000000000000000000000000000815250906105065760405162461bcd60e51b81526004016103cf91906123d0565b6001600160a01b038216611ae85760405162461bcd60e51b815260206004820152601c60248201527f7472616e7366657220746f20746865207a65726f20616464726573730000000060448201526064016103cf565b611af4848260006119c4565b611b0084846000610ca3565b611b0c84836000610ca3565b6001600160a01b03831660009081526005850160205260409020611b3090826107d3565b6001600160a01b03821660009081526005850160205260409020611b54908261193c565b6000818152600485016020526040812060010180546001600160a01b0319166001600160a01b038516179055611b8c90859083611bd3565b80826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b611bdf838260006119c4565b6000818152600484016020526040812060018101549091611c0d9186916001600160a01b0390911690610ca3565b6002810180546001600160a01b0319166001600160a01b038581169182179092556001830154604051859391909116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590600090a450505050565b828054611c7590612461565b90600052602060002090601f016020900481019282611c975760008555611cdd565b82601f10611cb057805160ff1916838001178555611cdd565b82800160010185558215611cdd579182015b82811115611cdd578251825591602001919060010190611cc2565b50611ce9929150611dbe565b5090565b508054611cf990612461565b6000825580601f10611d09575050565b601f016020900490600052602060002090810190611d279190611dbe565b50565b5080546000825560030290600052602060002090810190611d279190611dd3565b6040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001611db96040518060a00160405280600061ffff168152602001600061ffff168152602001600060ff168152602001600060ff168152602001606081525090565b905290565b5b80821115611ce95760008155600101611dbf565b5b80821115611ce95780546001600160a01b03191681556000600182018190556002820155600301611dd4565b80356001600160a01b0381168114611e1757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611e4d57611e4d611e1c565b604051601f8501601f19908116603f01168101908282118183101715611e7557611e75611e1c565b81604052809350858152868686011115611e8e57600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611ebe57600080fd5b84359350611ece60208601611e00565b9250604085013567ffffffffffffffff811115611eea57600080fd5b8501601f81018713611efb57600080fd5b611f0a87823560208401611e32565b949793965093946060013593505050565b600080600060608486031215611f3057600080fd5b83359250611f4060208501611e00565b9150604084013590509250925092565b600060208284031215611f6257600080fd5b5035919050565b600080600060608486031215611f7e57600080fd5b8335925060208401359150611f9560408501611e00565b90509250925092565b60008060408385031215611fb157600080fd5b50508035926020909101359150565b6000815180845260005b81811015611fe657602081850181015186830182015201611fca565b81811115611ff8576000602083870101525b50601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612055578284038952612043848351611fc0565b9885019893509084019060010161202b565b5091979650505050505050565b634e487b7160e01b600052602160045260246000fd5b600061ffff8083511684528060208401511660208501525060ff604083015116604084015260ff6060830151166060840152608082015160a060808501526116a460a085018261200d565b6000815160c084526120d860c0850182611fc0565b9050602080840151858303828701526120f18382611fc0565b9250506040840151858303604087015261210b838261200d565b60608681015188830391890191909152805180835290840194506000925090830190825b81811015612168578551600480821061215557634e487b7160e01b865260218152602486fd5b508352948401949184019160010161212f565b5050608086015193508681036080880152612183818561200d565b935050505060a083015184820360a086015261219f8282612078565b95945050505050565b6020815260006121bb60208301846120c3565b9392505050565b80358015158114611e1757600080fd5b6000806000606084860312156121e757600080fd5b833592506121f760208501611e00565b9150611f95604085016121c2565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561225a57603f198886030184526122488583516120c3565b9450928501929085019060010161222c565b5092979650505050505050565b6000806000806080858703121561227d57600080fd5b61228685611e00565b935061229460208601611e00565b925060408501359150606085013567ffffffffffffffff8111156122b757600080fd5b8501601f810187136122c857600080fd5b6122d787823560208401611e32565b91505092959194509250565b600080604083850312156122f657600080fd5b8235915061230660208401611e00565b90509250929050565b60008060006060848603121561232457600080fd5b8335925060208401359150611f95604085016121c2565b6000806000806080858703121561235157600080fd5b8435935061236160208601611e00565b925061236f60408601611e00565b9396929550929360600135925050565b60008282101561239f57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6020815260006121bb6020830184611fc0565b60006001600160a01b038087168352808616602084015250836040830152608060608301526124156080830184611fc0565b9695505050505050565b60006020828403121561243157600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146121bb57600080fd5b600181811c9082168061247557607f821691505b60208210810361249557634e487b7160e01b600052602260045260246000fd5b5091905056fe746f6b656e206f776e6572206163636f756e74206973206e6f742066726f7a656e467265657a65206f7220756e667265657a6520612070726f7065727479206f776e6572a2646970667358221220c1f091299b113ba183fac06c5ef00ca2329d488ba86e143630ed9fd6744d7e9164736f6c634300080d0033";

type JSCTitleTokenLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JSCTitleTokenLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JSCTitleTokenLib__factory extends ContractFactory {
  constructor(...args: JSCTitleTokenLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JSCTitleTokenLib> {
    return super.deploy(overrides || {}) as Promise<JSCTitleTokenLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JSCTitleTokenLib {
    return super.attach(address) as JSCTitleTokenLib;
  }
  override connect(signer: Signer): JSCTitleTokenLib__factory {
    return super.connect(signer) as JSCTitleTokenLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JSCTitleTokenLibInterface {
    return new utils.Interface(_abi) as JSCTitleTokenLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JSCTitleTokenLib {
    return new Contract(address, _abi, signerOrProvider) as JSCTitleTokenLib;
  }
}
