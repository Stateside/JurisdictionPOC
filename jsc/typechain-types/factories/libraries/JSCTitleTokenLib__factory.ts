/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  JSCTitleTokenLib,
  JSCTitleTokenLibInterface,
} from "../../libraries/JSCTitleTokenLib";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "getChangeOwnerRevision",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "JSCRevisionsLib.ParamType[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "quorum",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getFreezeOwnerRevision",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "JSCRevisionsLib.ParamType[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "quorum",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getFreezeTokenRevision",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "JSCRevisionsLib.ParamType[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "quorum",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRevisions",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "paramNames",
            type: "string[]",
          },
          {
            internalType: "enum JSCRevisionsLib.ParamType[]",
            name: "paramTypes",
            type: "JSCRevisionsLib.ParamType[]",
          },
          {
            internalType: "string[]",
            name: "paramHints",
            type: "string[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "votingPeriod",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "approvals",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "majority",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "quorum",
                type: "uint8",
              },
              {
                internalType: "string[]",
                name: "roles",
                type: "string[]",
              },
            ],
            internalType: "struct JSCRevisionsLib.VotingRules",
            name: "rules",
            type: "tuple",
          },
        ],
        internalType: "struct JSCRevisionsLib.Revision[]",
        name: "result",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "";

type JSCTitleTokenLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JSCTitleTokenLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JSCTitleTokenLib__factory extends ContractFactory {
  constructor(...args: JSCTitleTokenLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JSCTitleTokenLib> {
    return super.deploy(overrides || {}) as Promise<JSCTitleTokenLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JSCTitleTokenLib {
    return super.attach(address) as JSCTitleTokenLib;
  }
  override connect(signer: Signer): JSCTitleTokenLib__factory {
    return super.connect(signer) as JSCTitleTokenLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JSCTitleTokenLibInterface {
    return new utils.Interface(_abi) as JSCTitleTokenLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JSCTitleTokenLib {
    return new Contract(address, _abi, signerOrProvider) as JSCTitleTokenLib;
  }
}
