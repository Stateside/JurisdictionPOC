/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TV, TVInterface } from "../../contracts/TV";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSize",
        type: "uint256",
      },
    ],
    name: "SizeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newVideo",
        type: "string",
      },
    ],
    name: "VideoChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "getSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVideo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newVideo",
        type: "string",
      },
    ],
    name: "setVideo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052606460015560405180606001604052806034815260200162000df960349139600290805190602001906200003a9291906200013b565b503480156200004857600080fd5b50620000696200005d6200006f60201b60201c565b6200007760201b60201c565b6200024f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805462000149906200021a565b90600052602060002090601f0160209004810192826200016d5760008555620001b9565b82601f106200018857805160ff1916838001178555620001b9565b82800160010185558215620001b9579182015b82811115620001b85782518255916020019190600101906200019b565b5b509050620001c89190620001cc565b5090565b5b80821115620001e7576000816000905550600101620001cd565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200023357607f821691505b602082108103620002495762000248620001eb565b5b50919050565b610b9a806200025f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100d85780638da5cb5b146100e2578063de8fa43114610100578063f2fde38b1461011e5761007d565b8063170ab405146100825780633042a8621461009e57806331ad5ad2146100ba575b600080fd5b61009c600480360381019061009791906106c1565b61013a565b005b6100b860048036038101906100b39190610834565b6101f7565b005b6100c26102c4565b6040516100cf9190610905565b60405180910390f35b6100e0610356565b005b6100ea6103de565b6040516100f79190610968565b60405180910390f35b610108610407565b6040516101159190610992565b60405180910390f35b610138600480360381019061013391906109d9565b610411565b005b610142610508565b73ffffffffffffffffffffffffffffffffffffffff166101606103de565b73ffffffffffffffffffffffffffffffffffffffff16146101b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ad90610a52565b60405180910390fd5b806001819055507f7d6fee33bed3ddbf5f8cd6e4beac4c685060d43843e0254887f3ac485316d836816040516101ec9190610992565b60405180910390a150565b6101ff610508565b73ffffffffffffffffffffffffffffffffffffffff1661021d6103de565b73ffffffffffffffffffffffffffffffffffffffff1614610273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026a90610a52565b60405180910390fd5b80600290805190602001906102899291906105d4565b507ff486993663ac3e13aa555eb5e3e9de9e108b9b7d71fa8b3da898ff84eddbc7d0816040516102b99190610905565b60405180910390a150565b6060600280546102d390610aa1565b80601f01602080910402602001604051908101604052809291908181526020018280546102ff90610aa1565b801561034c5780601f106103215761010080835404028352916020019161034c565b820191906000526020600020905b81548152906001019060200180831161032f57829003601f168201915b5050505050905090565b61035e610508565b73ffffffffffffffffffffffffffffffffffffffff1661037c6103de565b73ffffffffffffffffffffffffffffffffffffffff16146103d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c990610a52565b60405180910390fd5b6103dc6000610510565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b610419610508565b73ffffffffffffffffffffffffffffffffffffffff166104376103de565b73ffffffffffffffffffffffffffffffffffffffff161461048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048490610a52565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f390610b44565b60405180910390fd5b61050581610510565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546105e090610aa1565b90600052602060002090601f0160209004810192826106025760008555610649565b82601f1061061b57805160ff1916838001178555610649565b82800160010185558215610649579182015b8281111561064857825182559160200191906001019061062d565b5b509050610656919061065a565b5090565b5b8082111561067357600081600090555060010161065b565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61069e8161068b565b81146106a957600080fd5b50565b6000813590506106bb81610695565b92915050565b6000602082840312156106d7576106d6610681565b5b60006106e5848285016106ac565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610741826106f8565b810181811067ffffffffffffffff821117156107605761075f610709565b5b80604052505050565b6000610773610677565b905061077f8282610738565b919050565b600067ffffffffffffffff82111561079f5761079e610709565b5b6107a8826106f8565b9050602081019050919050565b82818337600083830152505050565b60006107d76107d284610784565b610769565b9050828152602081018484840111156107f3576107f26106f3565b5b6107fe8482856107b5565b509392505050565b600082601f83011261081b5761081a6106ee565b5b813561082b8482602086016107c4565b91505092915050565b60006020828403121561084a57610849610681565b5b600082013567ffffffffffffffff81111561086857610867610686565b5b61087484828501610806565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156108b757808201518184015260208101905061089c565b838111156108c6576000848401525b50505050565b60006108d78261087d565b6108e18185610888565b93506108f1818560208601610899565b6108fa816106f8565b840191505092915050565b6000602082019050818103600083015261091f81846108cc565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061095282610927565b9050919050565b61096281610947565b82525050565b600060208201905061097d6000830184610959565b92915050565b61098c8161068b565b82525050565b60006020820190506109a76000830184610983565b92915050565b6109b681610947565b81146109c157600080fd5b50565b6000813590506109d3816109ad565b92915050565b6000602082840312156109ef576109ee610681565b5b60006109fd848285016109c4565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a3c602083610888565b9150610a4782610a06565b602082019050919050565b60006020820190508181036000830152610a6b81610a2f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ab957607f821691505b602082108103610acc57610acb610a72565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b2e602683610888565b9150610b3982610ad2565b604082019050919050565b60006020820190508181036000830152610b5d81610b21565b905091905056fea2646970667358221220c44a65fc5706b7c30171b2875e26bb496813fef997bd200f1c0497d0c3ea23c064736f6c634300080d003368747470733a2f2f7777772e796f75747562652e636f6d2f656d6265642f4c57727443735865386e413f636f6e74726f6c733d30";

type TVConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TVConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TV__factory extends ContractFactory {
  constructor(...args: TVConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TV> {
    return super.deploy(overrides || {}) as Promise<TV>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TV {
    return super.attach(address) as TV;
  }
  override connect(signer: Signer): TV__factory {
    return super.connect(signer) as TV__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TVInterface {
    return new utils.Interface(_abi) as TVInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TV {
    return new Contract(address, _abi, signerOrProvider) as TV;
  }
}
