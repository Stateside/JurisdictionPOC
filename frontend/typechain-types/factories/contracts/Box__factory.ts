/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Box, BoxInterface } from "../../contracts/Box";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "ColorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSize",
        type: "uint256",
      },
    ],
    name: "SizeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newVideo",
        type: "string",
      },
    ],
    name: "VideoChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "getColor",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVideo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newColor",
        type: "string",
      },
    ],
    name: "setColor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newVideo",
        type: "string",
      },
    ],
    name: "setVideo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261012c6001556040518060400160405280600481526020017f626c75650000000000000000000000000000000000000000000000000000000081525060029080519060200190620000579291906200018a565b5060405180606001604052806029815260200162000ff76029913960039080519060200190620000899291906200018a565b503480156200009757600080fd5b50620000b8620000ac620000be60201b60201c565b620000c660201b60201c565b6200029e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001989062000269565b90600052602060002090601f016020900481019282620001bc576000855562000208565b82601f10620001d757805160ff191683800117855562000208565b8280016001018555821562000208579182015b8281111562000207578251825591602001919060010190620001ea565b5b5090506200021791906200021b565b5090565b5b80821115620002365760008160009055506001016200021c565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028257607f821691505b6020821081036200029857620002976200023a565b5b50919050565b610d4980620002ae6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100f85780639988fa69146101165780639a86139b14610132578063de8fa43114610150578063f2fde38b1461016e57610093565b8063170ab405146100985780633042a862146100b457806331ad5ad2146100d0578063715018a6146100ee575b600080fd5b6100b260048036038101906100ad9190610870565b61018a565b005b6100ce60048036038101906100c991906109e3565b610247565b005b6100d8610314565b6040516100e59190610ab4565b60405180910390f35b6100f66103a6565b005b61010061042e565b60405161010d9190610b17565b60405180910390f35b610130600480360381019061012b91906109e3565b610457565b005b61013a610524565b6040516101479190610ab4565b60405180910390f35b6101586105b6565b6040516101659190610b41565b60405180910390f35b61018860048036038101906101839190610b88565b6105c0565b005b6101926106b7565b73ffffffffffffffffffffffffffffffffffffffff166101b061042e565b73ffffffffffffffffffffffffffffffffffffffff1614610206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fd90610c01565b60405180910390fd5b806001819055507f7d6fee33bed3ddbf5f8cd6e4beac4c685060d43843e0254887f3ac485316d8368160405161023c9190610b41565b60405180910390a150565b61024f6106b7565b73ffffffffffffffffffffffffffffffffffffffff1661026d61042e565b73ffffffffffffffffffffffffffffffffffffffff16146102c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ba90610c01565b60405180910390fd5b80600390805190602001906102d9929190610783565b507ff486993663ac3e13aa555eb5e3e9de9e108b9b7d71fa8b3da898ff84eddbc7d0816040516103099190610ab4565b60405180910390a150565b60606003805461032390610c50565b80601f016020809104026020016040519081016040528092919081815260200182805461034f90610c50565b801561039c5780601f106103715761010080835404028352916020019161039c565b820191906000526020600020905b81548152906001019060200180831161037f57829003601f168201915b5050505050905090565b6103ae6106b7565b73ffffffffffffffffffffffffffffffffffffffff166103cc61042e565b73ffffffffffffffffffffffffffffffffffffffff1614610422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041990610c01565b60405180910390fd5b61042c60006106bf565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61045f6106b7565b73ffffffffffffffffffffffffffffffffffffffff1661047d61042e565b73ffffffffffffffffffffffffffffffffffffffff16146104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca90610c01565b60405180910390fd5b80600290805190602001906104e9929190610783565b507fea8482eb24fdcbd88250f9fd14644f201467fcaf3c5f08a0675ed9d46977ae3b816040516105199190610ab4565b60405180910390a150565b60606002805461053390610c50565b80601f016020809104026020016040519081016040528092919081815260200182805461055f90610c50565b80156105ac5780601f10610581576101008083540402835291602001916105ac565b820191906000526020600020905b81548152906001019060200180831161058f57829003601f168201915b5050505050905090565b6000600154905090565b6105c86106b7565b73ffffffffffffffffffffffffffffffffffffffff166105e661042e565b73ffffffffffffffffffffffffffffffffffffffff161461063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063390610c01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a290610cf3565b60405180910390fd5b6106b4816106bf565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805461078f90610c50565b90600052602060002090601f0160209004810192826107b157600085556107f8565b82601f106107ca57805160ff19168380011785556107f8565b828001600101855582156107f8579182015b828111156107f75782518255916020019190600101906107dc565b5b5090506108059190610809565b5090565b5b8082111561082257600081600090555060010161080a565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61084d8161083a565b811461085857600080fd5b50565b60008135905061086a81610844565b92915050565b60006020828403121561088657610885610830565b5b60006108948482850161085b565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108f0826108a7565b810181811067ffffffffffffffff8211171561090f5761090e6108b8565b5b80604052505050565b6000610922610826565b905061092e82826108e7565b919050565b600067ffffffffffffffff82111561094e5761094d6108b8565b5b610957826108a7565b9050602081019050919050565b82818337600083830152505050565b600061098661098184610933565b610918565b9050828152602081018484840111156109a2576109a16108a2565b5b6109ad848285610964565b509392505050565b600082601f8301126109ca576109c961089d565b5b81356109da848260208601610973565b91505092915050565b6000602082840312156109f9576109f8610830565b5b600082013567ffffffffffffffff811115610a1757610a16610835565b5b610a23848285016109b5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a66578082015181840152602081019050610a4b565b83811115610a75576000848401525b50505050565b6000610a8682610a2c565b610a908185610a37565b9350610aa0818560208601610a48565b610aa9816108a7565b840191505092915050565b60006020820190508181036000830152610ace8184610a7b565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0182610ad6565b9050919050565b610b1181610af6565b82525050565b6000602082019050610b2c6000830184610b08565b92915050565b610b3b8161083a565b82525050565b6000602082019050610b566000830184610b32565b92915050565b610b6581610af6565b8114610b7057600080fd5b50565b600081359050610b8281610b5c565b92915050565b600060208284031215610b9e57610b9d610830565b5b6000610bac84828501610b73565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610beb602083610a37565b9150610bf682610bb5565b602082019050919050565b60006020820190508181036000830152610c1a81610bde565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c6857607f821691505b602082108103610c7b57610c7a610c21565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610cdd602683610a37565b9150610ce882610c81565b604082019050919050565b60006020820190508181036000830152610d0c81610cd0565b905091905056fea26469706673582212205218457dc17edd2580a6765f47dd64e7cfc5a696b34336c41ad2ba81e88298a464736f6c634300080d003368747470733a2f2f7777772e796f75747562652e636f6d2f656d6265642f4c57727443735865386e41";

type BoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Box__factory extends ContractFactory {
  constructor(...args: BoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Box> {
    return super.deploy(overrides || {}) as Promise<Box>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Box {
    return super.attach(address) as Box;
  }
  override connect(signer: Signer): Box__factory {
    return super.connect(signer) as Box__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoxInterface {
    return new utils.Interface(_abi) as BoxInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Box {
    return new Contract(address, _abi, signerOrProvider) as Box;
  }
}
